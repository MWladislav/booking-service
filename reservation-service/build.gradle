
plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.2'
    id 'org.hibernate.orm' version '6.2.6.Final'
    id 'org.graalvm.buildtools.native' version '0.9.23'
    id 'org.liquibase.gradle' version '2.2.0'
}

group = 'com.example'
version = '1.0.0-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.liquibase:liquibase-core'

    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    runtimeOnly 'com.github.loki4j:loki-logback-appender:1.3.2'

    liquibaseRuntime 'org.liquibase:liquibase-core:4.16.1'
    liquibaseRuntime 'org.liquibase:liquibase-groovy-dsl:3.0.2'
    liquibaseRuntime 'info.picocli:picocli:4.6.1'
    liquibaseRuntime 'org.postgresql:postgresql'
    liquibaseRuntime 'org.liquibase.ext:liquibase-hibernate6:4.23.0'
    liquibaseRuntime sourceSets.main.output

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.micrometer:micrometer-observation-test'
}

liquibase {
    activities {
        main {
            def file = new File("${projectDir}/src/main/resources/liquibase.properties")
            if (file.exists()) {
                def props = new Properties()
                InputStream is = new FileInputStream(file)
                props.load(is)
                is.close()

                changelogFile props['changelogFile']
                url props['url']
                username props['username']
                password props['password']
            } else {
                println "Add ${projectDir}/src/main/resources/liquibase.properties if you want use liquibase plugin"
            }
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

hibernate {
    enhancement {
        enableAssociationManagement = true
    }
}

